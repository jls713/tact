##
# @file
#
# Travis CI script for tact -- action, angle & frequency estimation
#
# @author Jason Sanders
#

language: cpp
compiler:
  - gcc
  - clang

env:
  - TORUS=0 LAPACK=0
  - TORUS=1 LAPACK=0
  - TORUS=0 LAPACK=1
  - TORUS=1 LAPACK=1

matrix:
  exclude:
    - compiler: clang
      env: TORUS=1 LAPACK=0
    - compiler: clang
      env: TORUS=1 LAPACK=1

script:
  - cd test; make tests.exe; ./tests.exe; cd ..

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-4.8
      - g++-4.8
      - clang

# need to install the Boost libraries to the sandbox
before_script:
  - sudo apt-get update -qq
  - sudo apt-get install libboost-python-dev
  - sudo apt-get install gsl-bin libgsl0-dev
  - sudo apt-get install liblapack-dev
  - sudo apt-get update -qq
  - sudo apt-get install python-dev -y
  - sudo apt-get install -qq python-numpy
  # - if [ "$CXX" == "g++" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi  # clang 3.4
  # - if [ "$CXX" == "clang++" ]; then sudo add-apt-repository -y ppa:h-rayflood/llvm; fi
  # - if [ "$CXX" = "clang++" ]; then sudo apt-get install -qq libstdc++-4.8-dev; fi
  # - if [ "$CXX" = "g++" ]; then sudo apt-get install -qq g++-4.8 --allow-unauthenticated; fi
  # - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8" CC="gcc-4.8"; fi
  # # clang 3.4
  # - if [ "$CXX" == "clang++" ]; then sudo apt-get install --allow-unauthenticated -qq clang-3.4; fi
  # - if [ "$CXX" == "clang++" ]; then cwd=$(pwd); fi
  # # - if [ "$CXX" == "clang++" ]; then export CXXFLAGS="-stdlib=libc++"; fi
  # - if [ "$CXX" == "clang++" ]; then svn co --quiet http://llvm.org/svn/llvm-project/libcxx/trunk libcxx; fi

  # - if [ "$CXX" == "clang++" ]; then cd libcxx/lib && bash buildit; fi
  # - if [ "$CXX" == "clang++" ]; then sudo cp ./libc++.so.1.0 /usr/lib/; fi
  # - if [ "$CXX" == "clang++" ]; then sudo mkdir /usr/include/c++/v1; fi
  # - if [ "$CXX" == "clang++" ]; then cd .. && sudo cp -r include/* /usr/include/c++/v1/; fi
  # - if [ "$CXX" == "clang++" ]; then cd /usr/lib && sudo ln -sf libc++.so.1.0 libc++.so; fi
  # - if [ "$CXX" == "clang++" ]; then sudo ln -sf libc++.so.1.0 libc++.so.1 && cd $cwd; fi

  # - if [ "$CXX" == "clang++" ]; then export CXX="clang++-3.4" CC="clang-3.4"; fi

  - sudo apt-get install -qq libgtest-dev
  - "cd /usr/src/gtest && sudo cmake . && sudo cmake --build . && sudo mv libg* /usr/local/lib/ ; cd -"
  - if [ "$TORUS" == 1 ]; then wget http://sourceforge.net/projects/ebfformat/files/libebf/c-cpp/libebf_c_cpp-0.0.3.tar.gz && tar -xvzf libebf_c_cpp-0.0.3.tar.gz && cd libebf_c_cpp-0.0.3 && ./configure --prefix=$(pwd) && make && make install && cd ..; fi
  - if [ "$TORUS" == 1 ]; then git clone https://github.com/PaulMcMillan-Astro/Torus.git && cd Torus && make MAIN_LIBS CPP="$CXX -fPIC -D__extern_always_inline=inline" && cd ..; fi
  - make
  - make python

notifications:
  email:
    recipients: jls@ast.cam.ac.uk
    on_success: change
    on_failure: change

# -D__extern_always_inline=inline
